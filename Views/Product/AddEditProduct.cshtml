@model InvoiceManager.Models.ViewModels.AddEditProductViewModel
@{
    ViewBag.Title = Model.Heading;
}

<h1 class="mb-3">@Model.Heading</h1>


<div class="row">
    <div class="col-lg-6">
        @using (Html.BeginForm("AddEditProduct", "Product"))
        {
            @Html.AntiForgeryToken()


            <p class="alert alert-info mt-2 mb-2">
                Pola nazwa i cena są
                <strong>wymagane</strong>
            </p>


            @Html.HiddenFor(x => x.Product.Id)
            @Html.HiddenFor(x => x.UserId)



            <div class="form-group row m-1">
                @Html.LabelFor(x => x.Product.Name)
                @Html.TextBoxFor(x => x.Product.Name,
                    new { @class = "form-control mt-2", autofocus = "autofocus" })
                @Html.ValidationMessageFor(x => x.Product.Name)
            </div>



            <div class="form-group row m-1">
                @Html.LabelFor(x => x.Product.Price)
                @Html.TextBoxFor(x => x.Product.Price,
                      new { @class = "form-control mt-2", @autofocu = "autofocus" })
                @Html.ValidationMessageFor(x => x.Product.Price)
            </div>

            <button class="btn btn-primary btn-lg mt-2 " type="submit">
                Zapisz
            </button>
        }

    </div>


</div>


@section Scripts
{
    <script type="text/javascript">

        $(document).ready(function () {

            $.validator.methods.number = function (value, element) {
                return this.optional(element) || /^-?(?:\d+|\d{1,3}(?:[\s\.,]\d{3})+)(?:[\.,]\d+)?$/.test(value);
            }
        })

    </script>
}
